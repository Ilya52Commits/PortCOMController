@{
    ViewData["Title"] = "Serial Port Interface";
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px 500px;
        }

        .container {
            display: flex;
            gap: 50px;
        }

        /* Все места с textarea*/

        .allOutput {
            width: 500px;
        }

            .allOutput p {
                margin: 15px 0;
            }

            .allOutput textarea {
                resize: none;
                height: 150px;
                width: 100%;
                overflow-y: scroll;
            }

        /* 2 контейнера с выходными данными */
        .outputDate {
            display: flex;
            gap: 30px;
            margin-top: 32px;
        }

        .onceBlock {
            display: block;
            width: 50%;
            box-sizing: border-box;
        }

            .onceBlock textarea {
                height: 250px;
                width: 100%;
            }

        /* Блок настроек */
        .setting_form {
            width: 400px;
            box-sizing: border-box;
        }

        .comboBox {
            gap: 20px;
            text-align: right;
            margin-bottom: 25px;
        }

        .setting_form p {
            color: rgb(60, 59, 61);
            font-size: 15px;
        }

        .btn {
            box-sizing: border-box;
            display: flex;
            gap: 40px;
        }

            .btn button {
                background-color: #656a6e;
                color: #ffffff;
                font-size: 15px;
                width: 45%;
                height: 50px;
                border: none;
            }
    </style>

</head>
<body>
    <div class="container">
        <div class="allOutput">
            <div class="outputDate">
                <div class="onceBlock">
                    <p>Давление:</p>
                    <textarea> </textarea>
                </div>
                <div class="onceBlock">
                    <p>Температура:</p>
                    <textarea> </textarea>
                </div>
            </div>
            <div class="statusBlock">
                <p>Строка состояния:</p>
                <textarea id="status"> </textarea>
            </div>
        </div>
        <div class="setting_form">
            <h1> Настройки порта </h1>
            <div class="comboBox">
                <label> Выбор порта: </label>
                <input value="COM3" id="portName">
            </div>
            <div class="comboBox">
                <label> Бит в секунду: </label>
                <input value="9600" type="number" id="baudRate">
            </div>
            <div class="comboBox">
                <label> Биты данных: </label>
                <input value="8" type="number" id="dataBits">
            </div>
            <div class="comboBox">
                <label> Четность: </label>
                <select id="parity">
                    <option value="None">None</option>
                    <option value="Odd">Odd</option>
                    <option value="Even">Even</option>
                    <option value="Mark">Mark</option>
                    <option value="Space">Space</option>
                </select>

            </div>
            <div class="comboBox">
                <label> Стоповые биты: </label>
                <input value="1" type="number" id="stopBits">
            </div>
            <div class="comboBox">
                <label> Управление потоком: </label>
                <select id="handshake">
                    <option value="None">None</option>
                    <option value="XOnXOff">XOnXOff</option>
                    <option value="RequestToSend">RequestToSend</option>
                    <option value="RequestToSendXOnXOff">RequestToSendXOnXOff</option>
                </select>
            </div>
            <p> Чтобы переподключить COM-порт, сначала нужно отключиться </p>
            <div class="btn">
                <button type="submit" id="disconnectBtn"> Отключиться</button>
                <button type="submit" id="connectBtn"> Подключиться</button>
            </div>
        </div>
        <script>
            const portName = document.getElementById('portName').value;
            const baudRate = document.getElementById('baudRate').value;
            const dataBits = document.getElementById('dataBits').value;
            const parity = document.getElementById('parity').value;
            const stopBits = document.getElementById('stopBits').value;
            const handshake = document.getElementById('handshake').value;

            const connectBtn = document.querySelector('#connectBtn'); 
            const disconnectBtn = document.querySelector('#disconnectBtn');
            
            connectBtn.addEventListener('click', () => {
                fetch('/Port/Connect', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body:
                        JSON.stringify({
                            portName,
                            baudRate,
                            dataBits,
                            parity,
                            stopBits,
                            handshake
                        }),
                })
                    .then(response => response.json().catch(() => { return { success: false, message: 'Некорректный JSON' }; }))
                    .then(data => {
                        document.getElementById('status').value = data.message;
                    })
                    .catch(error => {
                        document.getElementById('status').value = 'Ошибка: ' + error.message;
                    });
            });

            disconnectBtn.addEventListener('click', function () {
                fetch('/Port/Disconnect', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json().catch(() => { return { success: false, message: 'Некорректный JSON' }; }))
                    .then(data => {
                        document.getElementById('status').value = data.message;
                    })
                    .catch(error => {
                        document.getElementById('status').value = 'Ошибка: ' + error.message;
                    });
            });
        </script>
</body>

</html>